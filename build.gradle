import java.nio.file.Paths

buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
        classpath "com.github.node-gradle:gradle-node-plugin:2.2.4"
    }
}

plugins {
    id 'java'
    id 'war'
    id 'com.bmuschko.tomcat' version '2.5'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '1.2.1'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20190722'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.510'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.0'
    implementation group: 'com.googlecode.json-simple', name:'json-simple', version:'1.1'


    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    implementation group: 'javax.servlet', name: 'jsp-api', version: '2.0'
    def tomcatVersion = '9.0.16'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

    implementation group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: "${tomcatVersion}"
    testImplementation 'junit:junit:4.12'
}

tomcat {
    httpPort = 8080
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

def dockerDir = 'docker'
def warName = 'chea3.war'

war {
    archiveName = warName
    destinationDir = Paths.get(dockerDir).toFile()
}

clean {
    doLast {
        Paths.get("${dockerDir}/${warName}")
                .toFile().delete()
    }
}